apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-bootstrap" .Values.conf.appName | quote }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    type: bootstrap
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ printf "%s-bootstrap" .Values.conf.appName | quote }}
  template:
    metadata:
      labels:
        app: {{ printf "%s-bootstrap" .Values.conf.appName | quote }}
        sidecar.istio.io/inject: {{ .Values.istio.sidecarInject | quote }}
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
        sidecar.istio.io/proxyCPU: {{ .Values.istio.bootstrapProxyCPU | quote }}
        sidecar.istio.io/proxyMemory: {{ .Values.istio.proxyMemory | quote }}
        sidecar.istio.io/proxyCPULimit: {{ .Values.istio.bootstrapProxyCPULimit | quote }}
        sidecar.istio.io/proxyMemoryLimit: {{ .Values.istio.proxyMemoryLimit | quote }}
    spec:
      containers:
        - image: {{ .Values.data.bootstrapImage | quote }}
          imagePullPolicy: {{ .Values.data.imagePullPolicy | quote }}
          name: {{ printf "%s-bootstrap" .Values.conf.appName | quote }}
          readinessProbe:
            exec:
              command:
              - cat
              - /tmp/bootstrap_ready
          envFrom:
            - configMapRef:
                name: {{ printf "%s-bootstrap" .Values.conf.configmap | quote }}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
      restartPolicy: Always
      serviceAccountName: {{ printf "%s-bootstrap" .Values.data.serviceAccountName | quote }}
